#include <cmath>
#include "fullScreen.cpp"
#include "StackLinked.cpp"
#include "machineSolve.cpp"
#include "userSolve.cpp"

int main()
{
    char mode='0', again='Y';
    int disks;
    MaximizeOutputWindow(); //full screen output

    cout<<"******************************************************************************************************************************************************************************************************************\n";
    cout<<"******************************************************************************************************************************************************************************************************************\n";
    cout<<"**************************************************************************                                                               *************************************************************************\n";
    cout<<"**************************************************************************               WELCOME TO TOWER OF HANOI GAME                  *************************************************************************\n";
    cout<<"**************************************************************************     DESIGNED BY:                                              *************************************************************************\n";
    cout<<"**************************************************************************     1- MOHAMED SAYED HEMED                                    *************************************************************************\n";
    cout<<"**************************************************************************     2- SHERIF MOSTAFA SAMY                                    *************************************************************************\n";
    cout<<"**************************************************************************                                                               *************************************************************************\n";
    cout<<"**************************************************************************                    CAIRO UNIVERSITY                           *************************************************************************\n";
    cout<<"**************************************************************************                                                               *************************************************************************\n";
    cout<<"******************************************************************************************************************************************************************************************************************\n";
    cout<<"******************************************************************************************************************************************************************************************************************\n";

    while(again=='Y'||again=='y')
    {

        cout<<"\n1- Automated solving\n"<<"2- User solving\n"<<"Select mode: ";
        cin>>mode;
        cout<<"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
        switch(mode)
        {
            case '1':
                cout<<"Enter number of disks: ";
                cin>>disks;
                if(disks<=0||disks>15)
                {
                    cout<<"Sorry you enter invalid number of disks\n";
                    break;
                }
                cout<<"Minimum moves = "<<(pow(2,disks)-1)<<endl;
                cout<<"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
                machineSolve(disks);
                break;
            case '2':
                cout<<"Enter number of disks: ";
                cin>>disks;
                if(disks<=0||disks>15)
                {
                    cout<<"Sorry you enter invalid number of disks\n";
                    break;
                }
                cout<<"Minimum moves = "<<(pow(2,disks)-1)<<endl;
                cout<<"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
                userSolve(disks);
                break;
            default:
                cout<<"Select mode error\n";
                cout<<"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
        }
        cout<<"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n";
        cout<<"Do you want to try again Y/N: ";
        cin>>again;
        cout<<"------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------";
    }
    return 0;
}
